{"version":3,"sources":["useSessionState.js","AdaptiveCardJSONPanel.js","AdaptiveCardRenderPanel.js","createWebChatHostConfig.js","App.js","reportWebVitals.js","index.js"],"names":["warnedBrowserBlockStorage","AdaptiveCardJSONPanel","className","onChange","value","handleChange","useCallback","target","classNames","spellCheck","useSessionState","initialValue","key","sessionStorage","useMemo","window","err","console","warn","useState","getItem","setValue","nextValue","setItem","AdaptiveCardRenderPanel","json","rawEnableHostConfig","setRawEnableHostConfig","rawEnableMarkdown","setRawEnableMarkdown","adaptiveCardContentRef","useRef","enableHostConfig","setEnableHostConfig","handleEnableHostConfigChange","checked","enableMarkdown","setEnableMarkdown","handleEnableMarkdownChange","hostConfig","primaryFont","map","font","join","subtle","HostConfig","containerStyles","default","foregroundColors","accent","attention","dark","good","light","warning","emphasis","backgroundColor","supportsInteractivity","fontFamily","imageSizes","small","medium","large","actions","actionAlignment","actionsOrientation","buttonSpacing","maxActions","showCard","actionMode","inlineTopMargin","spacing","adaptiveCard","allowCustomStyle","imageSet","imageSize","maxImageHeight","factSet","title","color","size","isSubtle","weight","wrap","maxWidth","createWebChatHostConfig","markdownIt","MarkdownIt","AdaptiveCard","constructor","onProcessMarkdown","text","result","outputHtml","render","didProcess","undefined","content","JSON","parse","serializationContext","SerializationContext","eventCount","validationEvents","validateProperties","errors","i","push","getEventAt","error","message","useEffect","adaptiveCardContent","current","element","children","length","removeChild","appendChild","type","ref","index","App","adaptiveCardJSON","setAdaptiveCardJSON","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb1cf3e3.chunk.js","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\n\nlet warnedBrowserBlockStorage;\n\nexport default function useSessionState(initialValue, key) {\n  const sessionStorage = useMemo(() => {\n    // Accessing window.sessionStorage will failed if browser block cookies.\n    try {\n      return window.sessionStorage;\n    } catch (err) {\n      warnedBrowserBlockStorage || console.warn('useSessionState: Browser blocked access to sessionStorage, state will not be saved.');\n      warnedBrowserBlockStorage = true;\n    }\n  }, []);\n\n  const [value, setValue] = useState(() => (sessionStorage && sessionStorage.getItem(key)) || initialValue);\n\n  const setValueWithSession = useCallback(\n    nextValue => {\n      setValue(nextValue);\n\n      sessionStorage && sessionStorage.setItem(key, nextValue);\n    },\n    [key, sessionStorage]\n  );\n\n  return [value, setValueWithSession];\n}\n","import { useCallback } from 'react';\nimport classNames from 'classnames';\n\nimport './AdaptiveCardJSONPanel.css';\n\nconst AdaptiveCardJSONPanel = ({ className, onChange, value }) => {\n  const handleChange = useCallback(\n    ({ target: { value } }) => {\n      onChange && onChange(value);\n    },\n    [onChange]\n  );\n\n  return (\n    <div className=\"ac-json-panel\">\n      <textarea\n        className={classNames('ac-json-panel__text-area', className)}\n        onChange={handleChange}\n        spellCheck=\"false\"\n        value={value}\n      />\n    </div>\n  );\n};\n\nexport default AdaptiveCardJSONPanel;\n","import { AdaptiveCard, SerializationContext } from 'adaptivecards';\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\nimport classNames from 'classnames';\nimport MarkdownIt from 'markdown-it';\nimport JSON from 'json5';\n\nimport './AdaptiveCardRenderPanel.css';\n\nimport createWebChatHostConfig from './createWebChatHostConfig';\nimport useSessionState from './useSessionState';\n\nconst AdaptiveCardRenderPanel = ({ className, json }) => {\n  const [rawEnableHostConfig, setRawEnableHostConfig] = useSessionState('false', 'ENABLE_HOST_CONFIG');\n  const [rawEnableMarkdown, setRawEnableMarkdown] = useSessionState('false', 'ENABLE_MARKDOWN');\n  const adaptiveCardContentRef = useRef();\n\n  const enableHostConfig = rawEnableHostConfig === 'true';\n  const setEnableHostConfig = useCallback(value => setRawEnableHostConfig(!!value + ''), [setRawEnableHostConfig]);\n\n  const handleEnableHostConfigChange = useCallback(\n    ({ target: { checked } }) => setEnableHostConfig(checked),\n    [setEnableHostConfig]\n  );\n\n  const enableMarkdown = rawEnableMarkdown === 'true';\n  const setEnableMarkdown = useCallback(value => setRawEnableMarkdown(!!value + ''), [setRawEnableMarkdown]);\n\n  const handleEnableMarkdownChange = useCallback(\n    ({ target: { checked } }) => setEnableMarkdown(checked),\n    [setEnableMarkdown]\n  );\n\n  const hostConfig = useMemo(() => enableHostConfig && createWebChatHostConfig(), [enableHostConfig]);\n  const markdownIt = useMemo(() => enableMarkdown && new MarkdownIt(), [enableMarkdown]);\n\n  const { adaptiveCard, error, validationEvents } = useMemo(() => {\n    try {\n      const adaptiveCard = new AdaptiveCard();\n\n      if (hostConfig) {\n        adaptiveCard.hostConfig = hostConfig;\n      }\n\n      if (markdownIt) {\n        adaptiveCard.constructor.onProcessMarkdown = (text, result) => {\n          result.outputHtml = markdownIt.render(text);\n          result.didProcess = true;\n        };\n      } else {\n        adaptiveCard.constructor.onProcessMarkdown = undefined;\n      }\n\n      const content = JSON.parse(json);\n      const serializationContext = new SerializationContext();\n\n      adaptiveCard.parse(content, serializationContext);\n\n      const { eventCount } = serializationContext;\n      const { validationEvents } = adaptiveCard.validateProperties();\n\n      if (eventCount) {\n        let errors = [];\n\n        for (let i = 0; i < eventCount; i++) {\n          errors.push(serializationContext.getEventAt(i));\n        }\n\n        return { error: errors.join(', ') };\n      }\n\n      return { adaptiveCard, validationEvents };\n    } catch (err) {\n      return { error: err.message };\n    }\n  }, [hostConfig, json, markdownIt]);\n\n  useEffect(() => {\n    if (!adaptiveCard) {\n      return;\n    }\n\n    const { current: adaptiveCardContent } = adaptiveCardContentRef;\n    const element = adaptiveCard.render();\n\n    while (adaptiveCardContent.children.length) {\n      adaptiveCardContent.removeChild(adaptiveCardContent.children[0]);\n    }\n\n    adaptiveCardContent.appendChild(element);\n  }, [adaptiveCard, adaptiveCardContentRef]);\n\n  return (\n    <div className={classNames('ac-render-panel', className)}>\n      <div className=\"ac-render-panel__section ac-render-panel__button-bar\">\n        <h2 className=\"ac-render-panel__header\">Options</h2>\n        <div className=\"ac-render-panel__option\">\n          <label>\n            <input type=\"checkbox\" checked={enableMarkdown} onChange={handleEnableMarkdownChange} />\n            Enable Markdown\n          </label>\n        </div>\n        <div className=\"ac-render-panel__option\">\n          <label>\n            <input type=\"checkbox\" checked={enableHostConfig} onChange={handleEnableHostConfigChange} />\n            Use Adaptive Cards host config from Web Chat\n          </label>\n        </div>\n      </div>\n      {error ? (\n        <div className=\"ac-render-panel__section ac-render-panel__error\">\n          <h2 className=\"ac-render-panel__header\">Fatal error</h2>\n          <div className=\"ac-render-panel__error-message\">{error}</div>\n        </div>\n      ) : (\n        <div className=\"ac-render-panel__section\">\n          <h2 className=\"ac-render-panel__header\">Rendering</h2>\n          <div className=\"ac-render-panel__adaptive-card\" ref={adaptiveCardContentRef} />\n          {!!validationEvents.length && (\n            <div>\n              <h2 className=\"ac-render-panel__header\">Validation issues (non-fatal)</h2>\n              <ul className=\"ac-render-panel__validation-events-list\">\n                {validationEvents.map(({ message }, index) => (\n                  <li key={index}>{message}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdaptiveCardRenderPanel;\n","import { HostConfig } from 'adaptivecards';\n\nfunction fontFamily(fonts) {\n  return fonts.map(font => `'${font}'`).join(', ');\n}\n\nexport default function createWebChatHostConfig() {\n  const accent = '#0063B1';\n  const bubbleTextColor = 'Black';\n  const cardEmphasisBackgroundColor = '#F0F0F0';\n  const primaryFont = fontFamily(['Calibri', 'Helvetica Neue', 'Arial', 'sans-serif']);\n  const subtle = '#767676';\n\n  return new HostConfig({\n    containerStyles: {\n      default: {\n        foregroundColors: {\n          default: {\n            default: bubbleTextColor,\n            subtle\n          },\n          accent: {\n            default: accent,\n            subtle: '#0078D4'\n          },\n          attention: {\n            default: '#D13438',\n            subtle: '#A4262C'\n          },\n          dark: {\n            default: '#000000',\n            subtle: '#646464'\n          },\n          good: {\n            default: '#0B6A0B',\n            subtle: '#028A02'\n          },\n          light: {\n            default: '#FFFFFF',\n            subtle\n          },\n          warning: {\n            default: '#B75C00',\n            subtle: '#986F0B'\n          }\n        }\n      },\n      emphasis: {\n        backgroundColor: cardEmphasisBackgroundColor,\n        foregroundColors: {\n          default: {\n            default: '#000000',\n            subtle: '#484644'\n          }\n        }\n      },\n      accent: {\n        backgroundColor: '#C7DEF9',\n        foregroundColors: {\n          default: {\n            default: '#333333',\n            subtle: '#484644'\n          }\n        }\n      },\n      good: {\n        backgroundColor: '#CCFFCC',\n        foregroundColors: {\n          default: {\n            default: '#333333',\n            subtle: '#484644'\n          }\n        }\n      },\n      attention: {\n        backgroundColor: '#FFC5B2',\n        foregroundColors: {\n          default: {\n            default: '#333333',\n            subtle: '#484644'\n          }\n        }\n      },\n      warning: {\n        backgroundColor: '#FFE2B2',\n        foregroundColors: {\n          default: {\n            default: '#333333',\n            subtle: '#484644'\n          }\n        }\n      }\n    },\n    supportsInteractivity: true,\n    fontFamily: primaryFont,\n    imageSizes: {\n      small: 40,\n      medium: 80,\n      large: 160\n    },\n    actions: {\n      actionAlignment: 'stretch',\n      actionsOrientation: 'vertical',\n      buttonSpacing: 8,\n      maxActions: 100,\n      showCard: {\n        actionMode: 'inline',\n        inlineTopMargin: 8\n      },\n      spacing: 'default'\n    },\n    adaptiveCard: {\n      allowCustomStyle: false\n    },\n    imageSet: {\n      imageSize: 'medium',\n      maxImageHeight: 100\n    },\n    factSet: {\n      title: {\n        color: 'default',\n        size: 'default',\n        isSubtle: false,\n        weight: 'bolder',\n        wrap: true,\n        maxWidth: 150\n      },\n      value: {\n        color: 'default',\n        size: 'default',\n        isSubtle: false,\n        weight: 'default',\n        wrap: true\n      },\n      spacing: 8\n    }\n  });\n}\n","import './App.css';\n\nimport AdaptiveCardJSONPanel from './AdaptiveCardJSONPanel';\nimport AdaptiveCardRenderPanel from './AdaptiveCardRenderPanel';\nimport useSessionState from './useSessionState';\n\nconst DEFAULT_ADAPTIVE_CARD_JSON = `\n{\n  type: \"AdaptiveCard\",\n  \"body\": [\n  ]\n}\n`;\n\nfunction App() {\n  const [adaptiveCardJSON, setAdaptiveCardJSON] = useSessionState(DEFAULT_ADAPTIVE_CARD_JSON, 'ADAPTIVE_CARD_JSON');\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__set\">\n        <h1 className=\"app__panel-title\">Adaptive Card JSON</h1>\n        <AdaptiveCardJSONPanel onChange={setAdaptiveCardJSON} value={adaptiveCardJSON} />\n      </div>\n      <div className=\"app__set\">\n        <h1 className=\"app__panel-title\">Render</h1>\n        <AdaptiveCardRenderPanel json={adaptiveCardJSON} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}